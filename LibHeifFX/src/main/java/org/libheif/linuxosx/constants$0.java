// Generated by jextract

package org.libheif.linuxosx;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$0 {

    static final FunctionDescriptor heif_get_version$FUNC = FunctionDescriptor.of(C_POINTER);
    static final MethodHandle heif_get_version$MH = RuntimeHelper.downcallHandle(
        heif_h.LIBRARIES, "heif_get_version",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        constants$0.heif_get_version$FUNC, false
    );
    static final FunctionDescriptor heif_get_version_number$FUNC = FunctionDescriptor.of(C_INT);
    static final MethodHandle heif_get_version_number$MH = RuntimeHelper.downcallHandle(
        heif_h.LIBRARIES, "heif_get_version_number",
        "()I",
        constants$0.heif_get_version_number$FUNC, false
    );
    static final FunctionDescriptor heif_get_version_number_major$FUNC = FunctionDescriptor.of(C_INT);
    static final MethodHandle heif_get_version_number_major$MH = RuntimeHelper.downcallHandle(
        heif_h.LIBRARIES, "heif_get_version_number_major",
        "()I",
        constants$0.heif_get_version_number_major$FUNC, false
    );
    static final FunctionDescriptor heif_get_version_number_minor$FUNC = FunctionDescriptor.of(C_INT);
    static final MethodHandle heif_get_version_number_minor$MH = RuntimeHelper.downcallHandle(
        heif_h.LIBRARIES, "heif_get_version_number_minor",
        "()I",
        constants$0.heif_get_version_number_minor$FUNC, false
    );
    static final FunctionDescriptor heif_get_version_number_maintenance$FUNC = FunctionDescriptor.of(C_INT);
    static final MethodHandle heif_get_version_number_maintenance$MH = RuntimeHelper.downcallHandle(
        heif_h.LIBRARIES, "heif_get_version_number_maintenance",
        "()I",
        constants$0.heif_get_version_number_maintenance$FUNC, false
    );
    static final FunctionDescriptor heif_check_filetype$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT
    );
    static final MethodHandle heif_check_filetype$MH = RuntimeHelper.downcallHandle(
        heif_h.LIBRARIES, "heif_check_filetype",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$0.heif_check_filetype$FUNC, false
    );
}


