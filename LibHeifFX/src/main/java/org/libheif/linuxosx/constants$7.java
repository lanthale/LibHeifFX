// Generated by jextract

package org.libheif.linuxosx;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$7 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$7() {}
    static final MethodHandle const$0 = RuntimeHelper.upcallHandle(heif_reader.wait_for_file_size.class, "apply", constants$6.const$2);
    static final VarHandle const$1 = constants$4.const$4.varHandle(MemoryLayout.PathElement.groupElement("wait_for_file_size"));
    static final FunctionDescriptor const$2 = FunctionDescriptor.of(MemoryLayout.structLayout(
        JAVA_INT.withName("code"),
        JAVA_INT.withName("subcode"),
        RuntimeHelper.POINTER.withName("message")
    ).withName("heif_error"),
        RuntimeHelper.POINTER,
        RuntimeHelper.POINTER,
        RuntimeHelper.POINTER
    );
    static final MethodHandle const$3 = RuntimeHelper.downcallHandle(
        "heif_context_read_from_file",
        constants$7.const$2
    );
    static final FunctionDescriptor const$4 = FunctionDescriptor.of(MemoryLayout.structLayout(
        JAVA_INT.withName("code"),
        JAVA_INT.withName("subcode"),
        RuntimeHelper.POINTER.withName("message")
    ).withName("heif_error"),
        RuntimeHelper.POINTER,
        RuntimeHelper.POINTER,
        JAVA_LONG,
        RuntimeHelper.POINTER
    );
    static final MethodHandle const$5 = RuntimeHelper.downcallHandle(
        "heif_context_read_from_memory",
        constants$7.const$4
    );
}


