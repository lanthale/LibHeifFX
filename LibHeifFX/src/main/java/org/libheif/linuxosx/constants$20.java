// Generated by jextract

package org.libheif.linuxosx;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$20 {

    static final FunctionDescriptor heif_encoder_parameter_string_valid_values$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        C_INT.withName("code"),
        C_INT.withName("subcode"),
        C_POINTER.withName("message")
    ).withName("heif_error"),
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle heif_encoder_parameter_string_valid_values$MH = RuntimeHelper.downcallHandle(
        heif_h.LIBRARIES, "heif_encoder_parameter_string_valid_values",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemorySegment;",
        constants$20.heif_encoder_parameter_string_valid_values$FUNC, false
    );
    static final FunctionDescriptor heif_encoder_parameter_integer_valid_values$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        C_INT.withName("code"),
        C_INT.withName("subcode"),
        C_POINTER.withName("message")
    ).withName("heif_error"),
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle heif_encoder_parameter_integer_valid_values$MH = RuntimeHelper.downcallHandle(
        heif_h.LIBRARIES, "heif_encoder_parameter_integer_valid_values",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemorySegment;",
        constants$20.heif_encoder_parameter_integer_valid_values$FUNC, false
    );
    static final FunctionDescriptor heif_encoder_set_parameter$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        C_INT.withName("code"),
        C_INT.withName("subcode"),
        C_POINTER.withName("message")
    ).withName("heif_error"),
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle heif_encoder_set_parameter$MH = RuntimeHelper.downcallHandle(
        heif_h.LIBRARIES, "heif_encoder_set_parameter",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemorySegment;",
        constants$20.heif_encoder_set_parameter$FUNC, false
    );
    static final FunctionDescriptor heif_encoder_get_parameter$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        C_INT.withName("code"),
        C_INT.withName("subcode"),
        C_POINTER.withName("message")
    ).withName("heif_error"),
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle heif_encoder_get_parameter$MH = RuntimeHelper.downcallHandle(
        heif_h.LIBRARIES, "heif_encoder_get_parameter",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemorySegment;",
        constants$20.heif_encoder_get_parameter$FUNC, false
    );
    static final FunctionDescriptor heif_encoder_has_default$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle heif_encoder_has_default$MH = RuntimeHelper.downcallHandle(
        heif_h.LIBRARIES, "heif_encoder_has_default",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$20.heif_encoder_has_default$FUNC, false
    );
    static final FunctionDescriptor heif_encoding_options_alloc$FUNC = FunctionDescriptor.of(C_POINTER);
    static final MethodHandle heif_encoding_options_alloc$MH = RuntimeHelper.downcallHandle(
        heif_h.LIBRARIES, "heif_encoding_options_alloc",
        "([Ljava/lang/Object;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$20.heif_encoding_options_alloc$FUNC, true
    );
}


