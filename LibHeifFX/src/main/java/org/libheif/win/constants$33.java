// Generated by jextract

package org.libheif.win;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$33 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$33() {}
    static final MethodHandle const$0 = RuntimeHelper.downcallHandle(
        "heif_encoder_set_logging_level",
        constants$32.const$3
    );
    static final MethodHandle const$1 = RuntimeHelper.downcallHandle(
        "heif_encoder_list_parameters",
        constants$9.const$3
    );
    static final MethodHandle const$2 = RuntimeHelper.downcallHandle(
        "heif_encoder_parameter_get_name",
        constants$9.const$3
    );
    static final MethodHandle const$3 = RuntimeHelper.downcallHandle(
        "heif_encoder_parameter_get_type",
        constants$2.const$2
    );
    static final MethodHandle const$4 = RuntimeHelper.downcallHandle(
        "heif_encoder_parameter_get_valid_integer_range",
        constants$8.const$1
    );
    static final FunctionDescriptor const$5 = FunctionDescriptor.of(MemoryLayout.structLayout(
        JAVA_INT.withName("code"),
        JAVA_INT.withName("subcode"),
        RuntimeHelper.POINTER.withName("message")
    ).withName("heif_error"),
        RuntimeHelper.POINTER,
        RuntimeHelper.POINTER,
        RuntimeHelper.POINTER,
        RuntimeHelper.POINTER,
        RuntimeHelper.POINTER,
        RuntimeHelper.POINTER,
        RuntimeHelper.POINTER
    );
    static final MethodHandle const$6 = RuntimeHelper.downcallHandle(
        "heif_encoder_parameter_get_valid_integer_values",
        constants$33.const$5
    );
}


