// Generated by jextract

package org.libheif.win;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$29 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$29() {}
    static final MethodHandle const$0 = RuntimeHelper.downcallHandle(
        "heif_context_write_to_file",
        constants$9.const$0
    );
    static final StructLayout const$1 = MemoryLayout.structLayout(
        JAVA_INT.withName("writer_api_version"),
        MemoryLayout.paddingLayout(4),
        RuntimeHelper.POINTER.withName("write")
    ).withName("heif_writer");
    static final VarHandle const$2 = constants$29.const$1.varHandle(MemoryLayout.PathElement.groupElement("writer_api_version"));
    static final MethodHandle const$3 = RuntimeHelper.upcallHandle(heif_writer.write.class, "apply", constants$7.const$4);
    static final MethodHandle const$4 = RuntimeHelper.downcallHandle(
        constants$7.const$4
    );
    static final VarHandle const$5 = constants$29.const$1.varHandle(MemoryLayout.PathElement.groupElement("write"));
}


