// Generated by jextract

package org.libheif.win;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$22 {

    static final FunctionDescriptor heif_context_add_XMP_metadata$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("code"),
        Constants$root.C_LONG$LAYOUT.withName("subcode"),
        Constants$root.C_POINTER$LAYOUT.withName("message")
    ).withName("heif_error"),
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle heif_context_add_XMP_metadata$MH = RuntimeHelper.downcallHandle(
        "heif_context_add_XMP_metadata",
        constants$22.heif_context_add_XMP_metadata$FUNC
    );
    static final FunctionDescriptor heif_context_add_generic_metadata$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("code"),
        Constants$root.C_LONG$LAYOUT.withName("subcode"),
        Constants$root.C_POINTER$LAYOUT.withName("message")
    ).withName("heif_error"),
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle heif_context_add_generic_metadata$MH = RuntimeHelper.downcallHandle(
        "heif_context_add_generic_metadata",
        constants$22.heif_context_add_generic_metadata$FUNC
    );
    static final FunctionDescriptor heif_image_create$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("code"),
        Constants$root.C_LONG$LAYOUT.withName("subcode"),
        Constants$root.C_POINTER$LAYOUT.withName("message")
    ).withName("heif_error"),
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle heif_image_create$MH = RuntimeHelper.downcallHandle(
        "heif_image_create",
        constants$22.heif_image_create$FUNC
    );
    static final FunctionDescriptor heif_image_add_plane$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("code"),
        Constants$root.C_LONG$LAYOUT.withName("subcode"),
        Constants$root.C_POINTER$LAYOUT.withName("message")
    ).withName("heif_error"),
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle heif_image_add_plane$MH = RuntimeHelper.downcallHandle(
        "heif_image_add_plane",
        constants$22.heif_image_add_plane$FUNC
    );
    static final FunctionDescriptor heif_image_set_premultiplied_alpha$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle heif_image_set_premultiplied_alpha$MH = RuntimeHelper.downcallHandle(
        "heif_image_set_premultiplied_alpha",
        constants$22.heif_image_set_premultiplied_alpha$FUNC
    );
    static final FunctionDescriptor heif_image_is_premultiplied_alpha$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle heif_image_is_premultiplied_alpha$MH = RuntimeHelper.downcallHandle(
        "heif_image_is_premultiplied_alpha",
        constants$22.heif_image_is_premultiplied_alpha$FUNC
    );
}


