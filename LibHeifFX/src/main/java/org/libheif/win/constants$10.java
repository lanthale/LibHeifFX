// Generated by jextract

package org.libheif.win;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$10 {

    static final FunctionDescriptor heif_image_handle_get_color_profile_type$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle heif_image_handle_get_color_profile_type$MH = RuntimeHelper.downcallHandle(
        heif_h.LIBRARIES, "heif_image_handle_get_color_profile_type",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$10.heif_image_handle_get_color_profile_type$FUNC, false
    );
    static final FunctionDescriptor heif_image_handle_get_raw_color_profile_size$FUNC = FunctionDescriptor.of(C_LONG_LONG,
        C_POINTER
    );
    static final MethodHandle heif_image_handle_get_raw_color_profile_size$MH = RuntimeHelper.downcallHandle(
        heif_h.LIBRARIES, "heif_image_handle_get_raw_color_profile_size",
        "(Ljdk/incubator/foreign/MemoryAddress;)J",
        constants$10.heif_image_handle_get_raw_color_profile_size$FUNC, false
    );
    static final FunctionDescriptor heif_image_handle_get_raw_color_profile$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        C_INT.withName("code"),
        C_INT.withName("subcode"),
        C_POINTER.withName("message")
    ).withName("heif_error"),
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle heif_image_handle_get_raw_color_profile$MH = RuntimeHelper.downcallHandle(
        heif_h.LIBRARIES, "heif_image_handle_get_raw_color_profile",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemorySegment;",
        constants$10.heif_image_handle_get_raw_color_profile$FUNC, false
    );
    static final FunctionDescriptor heif_image_handle_get_nclx_color_profile$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        C_INT.withName("code"),
        C_INT.withName("subcode"),
        C_POINTER.withName("message")
    ).withName("heif_error"),
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle heif_image_handle_get_nclx_color_profile$MH = RuntimeHelper.downcallHandle(
        heif_h.LIBRARIES, "heif_image_handle_get_nclx_color_profile",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemorySegment;",
        constants$10.heif_image_handle_get_nclx_color_profile$FUNC, false
    );
    static final FunctionDescriptor heif_nclx_color_profile_alloc$FUNC = FunctionDescriptor.of(C_POINTER);
    static final MethodHandle heif_nclx_color_profile_alloc$MH = RuntimeHelper.downcallHandle(
        heif_h.LIBRARIES, "heif_nclx_color_profile_alloc",
        "([Ljava/lang/Object;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$10.heif_nclx_color_profile_alloc$FUNC, true
    );
    static final FunctionDescriptor heif_nclx_color_profile_free$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle heif_nclx_color_profile_free$MH = RuntimeHelper.downcallHandle(
        heif_h.LIBRARIES, "heif_nclx_color_profile_free",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$10.heif_nclx_color_profile_free$FUNC, false
    );
}


